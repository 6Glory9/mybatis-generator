<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.ad.dao.mapper.AdOperationLogMapper">
  <resultMap id="BaseResultMap" type="mybatis.ad.dao.model.AdOperationLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="operate_key" jdbcType="VARCHAR" property="operateKey" />
    <result column="operate_desc" jdbcType="VARCHAR" property="operateDesc" />
    <result column="operator_name" jdbcType="VARCHAR" property="operatorName" />
    <result column="operate_ip" jdbcType="VARCHAR" property="operateIp" />
    <result column="operate_session_id" jdbcType="VARCHAR" property="operateSessionId" />
    <result column="operate_cost" jdbcType="BIGINT" property="operateCost" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="mybatis.ad.dao.model.AdOperationLog">
    <result column="operate_params" jdbcType="LONGVARCHAR" property="operateParams" />
    <result column="operate_result" jdbcType="LONGVARCHAR" property="operateResult" />
    <result column="ext" jdbcType="LONGVARCHAR" property="ext" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, operate_key, operate_desc, operator_name, operate_ip, operate_session_id, operate_cost, 
    create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    operate_params, operate_result, ext
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="mybatis.ad.dao.model.AdOperationLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ad_operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="mybatis.ad.dao.model.AdOperationLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ad_operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ad_operation_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ad_operation_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="mybatis.ad.dao.model.AdOperationLogExample">
    delete from ad_operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mybatis.ad.dao.model.AdOperationLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ad_operation_log (operate_key, operate_desc, operator_name, 
      operate_ip, operate_session_id, operate_cost, 
      create_time, update_time, operate_params, 
      operate_result, ext)
    values (#{operateKey,jdbcType=VARCHAR}, #{operateDesc,jdbcType=VARCHAR}, #{operatorName,jdbcType=VARCHAR}, 
      #{operateIp,jdbcType=VARCHAR}, #{operateSessionId,jdbcType=VARCHAR}, #{operateCost,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{operateParams,jdbcType=LONGVARCHAR}, 
      #{operateResult,jdbcType=LONGVARCHAR}, #{ext,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="mybatis.ad.dao.model.AdOperationLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ad_operation_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="operateKey != null">
        operate_key,
      </if>
      <if test="operateDesc != null">
        operate_desc,
      </if>
      <if test="operatorName != null">
        operator_name,
      </if>
      <if test="operateIp != null">
        operate_ip,
      </if>
      <if test="operateSessionId != null">
        operate_session_id,
      </if>
      <if test="operateCost != null">
        operate_cost,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="operateParams != null">
        operate_params,
      </if>
      <if test="operateResult != null">
        operate_result,
      </if>
      <if test="ext != null">
        ext,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="operateKey != null">
        #{operateKey,jdbcType=VARCHAR},
      </if>
      <if test="operateDesc != null">
        #{operateDesc,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null">
        #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="operateIp != null">
        #{operateIp,jdbcType=VARCHAR},
      </if>
      <if test="operateSessionId != null">
        #{operateSessionId,jdbcType=VARCHAR},
      </if>
      <if test="operateCost != null">
        #{operateCost,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateParams != null">
        #{operateParams,jdbcType=LONGVARCHAR},
      </if>
      <if test="operateResult != null">
        #{operateResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="ext != null">
        #{ext,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mybatis.ad.dao.model.AdOperationLogExample" resultType="java.lang.Long">
    select count(*) from ad_operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ad_operation_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.operateKey != null">
        operate_key = #{record.operateKey,jdbcType=VARCHAR},
      </if>
      <if test="record.operateDesc != null">
        operate_desc = #{record.operateDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorName != null">
        operator_name = #{record.operatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.operateIp != null">
        operate_ip = #{record.operateIp,jdbcType=VARCHAR},
      </if>
      <if test="record.operateSessionId != null">
        operate_session_id = #{record.operateSessionId,jdbcType=VARCHAR},
      </if>
      <if test="record.operateCost != null">
        operate_cost = #{record.operateCost,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operateParams != null">
        operate_params = #{record.operateParams,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.operateResult != null">
        operate_result = #{record.operateResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.ext != null">
        ext = #{record.ext,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update ad_operation_log
    set id = #{record.id,jdbcType=BIGINT},
      operate_key = #{record.operateKey,jdbcType=VARCHAR},
      operate_desc = #{record.operateDesc,jdbcType=VARCHAR},
      operator_name = #{record.operatorName,jdbcType=VARCHAR},
      operate_ip = #{record.operateIp,jdbcType=VARCHAR},
      operate_session_id = #{record.operateSessionId,jdbcType=VARCHAR},
      operate_cost = #{record.operateCost,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      operate_params = #{record.operateParams,jdbcType=LONGVARCHAR},
      operate_result = #{record.operateResult,jdbcType=LONGVARCHAR},
      ext = #{record.ext,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ad_operation_log
    set id = #{record.id,jdbcType=BIGINT},
      operate_key = #{record.operateKey,jdbcType=VARCHAR},
      operate_desc = #{record.operateDesc,jdbcType=VARCHAR},
      operator_name = #{record.operatorName,jdbcType=VARCHAR},
      operate_ip = #{record.operateIp,jdbcType=VARCHAR},
      operate_session_id = #{record.operateSessionId,jdbcType=VARCHAR},
      operate_cost = #{record.operateCost,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="mybatis.ad.dao.model.AdOperationLog">
    update ad_operation_log
    <set>
      <if test="operateKey != null">
        operate_key = #{operateKey,jdbcType=VARCHAR},
      </if>
      <if test="operateDesc != null">
        operate_desc = #{operateDesc,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null">
        operator_name = #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="operateIp != null">
        operate_ip = #{operateIp,jdbcType=VARCHAR},
      </if>
      <if test="operateSessionId != null">
        operate_session_id = #{operateSessionId,jdbcType=VARCHAR},
      </if>
      <if test="operateCost != null">
        operate_cost = #{operateCost,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateParams != null">
        operate_params = #{operateParams,jdbcType=LONGVARCHAR},
      </if>
      <if test="operateResult != null">
        operate_result = #{operateResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="ext != null">
        ext = #{ext,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="mybatis.ad.dao.model.AdOperationLog">
    update ad_operation_log
    set operate_key = #{operateKey,jdbcType=VARCHAR},
      operate_desc = #{operateDesc,jdbcType=VARCHAR},
      operator_name = #{operatorName,jdbcType=VARCHAR},
      operate_ip = #{operateIp,jdbcType=VARCHAR},
      operate_session_id = #{operateSessionId,jdbcType=VARCHAR},
      operate_cost = #{operateCost,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      operate_params = #{operateParams,jdbcType=LONGVARCHAR},
      operate_result = #{operateResult,jdbcType=LONGVARCHAR},
      ext = #{ext,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="mybatis.ad.dao.model.AdOperationLog">
    update ad_operation_log
    set operate_key = #{operateKey,jdbcType=VARCHAR},
      operate_desc = #{operateDesc,jdbcType=VARCHAR},
      operator_name = #{operatorName,jdbcType=VARCHAR},
      operate_ip = #{operateIp,jdbcType=VARCHAR},
      operate_session_id = #{operateSessionId,jdbcType=VARCHAR},
      operate_cost = #{operateCost,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>